const Socket= {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: <ref *1> Namespace {
    _events: [Object: null prototype] {
      connection: [AsyncFunction (anonymous)]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map(0) {},
    _fns: [ [Function (anonymous)], [AsyncFunction (anonymous)] ],
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map(0) {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [class Adapter extends EventEmitter],
      sockets: [Circular *1],
      opts: [Object],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular *1],
      rooms: Map(0) {},
      sids: Map(0) {},
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map(0) {},
    nsps: Map(0) {},
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map(0) {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [class Adapter extends EventEmitter],
      sockets: [Namespace],
      opts: [Object],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'vm4CNb_IQaPdDmZRAAAA',
      server: [Server],
      upgrading: true,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      protocol: 4,
      remoteAddress: '::1',
      checkIntervalTimer: Timeout {
        _idleTimeout: 100,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1487,
        _onTimeout: [Function: check],
        _timerArgs: undefined,
        _repeat: 100,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 124,
        [Symbol(triggerId)]: 93
      },
      upgradeTimeoutTimer: Timeout {
        _idleTimeout: 10000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1482,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 99,
        [Symbol(triggerId)]: 94
      },
      pingTimeoutTimer: Timeout {
        _idleTimeout: 45000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1491,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 130,
        [Symbol(triggerId)]: 129
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 25000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1470,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 83,
        [Symbol(triggerId)]: 0
      },
      transport: [Polling],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'vm4CNb_IQaPdDmZRAAAA',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: Timeout {
      _idleTimeout: 45000,
      _idlePrev: [Timeout],
      _idleNext: [TimersList],
      _idleStart: 1472,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 85,
      [Symbol(triggerId)]: 0
    }
  },
  data: {},
  acks: Map(0) {},
  fns: [],
  flags: {},
  server: <ref *2> Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map(1) { '/' => [Namespace] },
    parentNsps: Map(0) {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [class Encoder],
      Decoder: [class Decoder extends Emitter]
    },
    encoder: Encoder {},
    _adapter: [class Adapter extends EventEmitter],
    sockets: <ref *1> Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(0) {},
      _fns: [Array],
      _ids: 0,
      server: [Circular *2],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    opts: { cors: [Object] },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 1,
      opts: [Object],
      corsMiddleware: [Function: corsMiddleware],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::5000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 10
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 1,
      opts: [Object],
      corsMiddleware: [Function: corsMiddleware],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: <ref *3> Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: <ref *1> Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(0) {},
      _fns: [Array],
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular *3],
      [Symbol(kCapture)]: false
    },
    rooms: Map(0) {},
    sids: Map(0) {},
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'XidfPysXBZOVZ3RHAAAB',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5000',
      connection: 'keep-alive',
      'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90"',
      accept: '*/*',
      dnt: '1',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MDNhODc3NTQzNGYzMjIyZjQ2OWRhYjkiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjIwOTc1MzQ0LCJleHAiOjE2MjA5NzU5NDR9.jpQwFw6qmpud-fo74YJ9dJgmbt3BrnnvQupagj3rlm4',
      'sec-ch-ua-mobile': '?0',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'ru,en;q=0.9,la;q=0.8'
    },
    time: 'Fri May 14 2021 09:56:07 GMT+0300 (Москва, стандартное время)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1620975367077,
    url: '/socket.io/?EIO=4&transport=polling&t=NbfgJ2A',
    query: [Object: null prototype] {
      EIO: '4',
      transport: 'polling',
      t: 'NbfgJ2A'
    },
    auth: {}
  },
  encoded_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MDNhODc3NTQzNGYzMjIyZjQ2OWRhYjkiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjIwOTc1MzQ0LCJleHAiOjE2MjA5NzU5NDR9.jpQwFw6qmpud-fo74YJ9dJgmbt3BrnnvQupagj3rlm4',
  decoded_token: {
    userId: '603a8775434f3222f469dab9',
    type: 'access',
    iat: 1620975344,
    exp: 1620975944
  },
  [Symbol(kCapture)]: false
}